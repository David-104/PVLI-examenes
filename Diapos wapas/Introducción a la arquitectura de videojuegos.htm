<!DOCTYPE html>
<html class="reveal-full-page"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
  <title>Introducción a la arquitectura de videojuegos</title>
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
  <link rel="stylesheet" href="Introducci%C3%B3n%20a%20la%20arquitectura%20de%20videojuegos_files/reset.css">
  <link rel="stylesheet" href="Introducci%C3%B3n%20a%20la%20arquitectura%20de%20videojuegos_files/reveal.css">
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre > code.sourceCode { white-space: pre; position: relative; }
    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }
    pre > code.sourceCode > span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode > span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre > code.sourceCode { white-space: pre-wrap; }
    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code > span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code > span > a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
    .display.math{display: block; text-align: center; margin: 0.5rem auto;}
  </style>
  <link rel="stylesheet" href="Introducci%C3%B3n%20a%20la%20arquitectura%20de%20videojuegos_files/beige.css" id="theme">
  <link rel="stylesheet" href="Introducci%C3%B3n%20a%20la%20arquitectura%20de%20videojuegos_files/juegosweb.css">
</head>
<body style="transition: transform 0.8s ease 0s; --slide-width: 960px; --slide-height: 700px;" class="reveal-viewport">
  <div class="reveal slide center focused has-vertical-slides has-horizontal-slides ready" role="application" data-transition-speed="default" data-background-transition="fade">
    <div class="slides" style="width: 960px; height: 700px; inset: 50% auto auto 50%; transform: translate(-50%, -50%) scale(1.01349);">

<section id="title-slide" style="top: 265.5px; display: block;" class="present">
  <h1 class="title">Introducción a la arquitectura de videojuegos</h1>
</section>

<section style="top: 0px; display: block;" hidden="" aria-hidden="true" class="stack future">
<section id="qué-es-la-arquitectura-de-un-juego" class="title-slide slide level1" style="top: 307.5px; display: block;">
<h1>Qué es la arquitectura de un juego</h1>

</section>
<section class="slide level2 future" aria-hidden="true" style="top: 278px; display: block;">

<p>Los videojuegos son, normalmente, sistemas complejos y grandes</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Tienen muchos subsistemas que, además, gestionan aspectos distintos y hasta tecnologías heterogéneas</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>La complejidad puede crecer tanto, que carecer de un diseño global coherente <em>puede hacer inmanejable el desarrollo</em></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Por eso se usan <em>arquitecturas</em></p>
<p>Un arquitectura, análoga a la de un edificio, es una manera de organizar el código para hacer el desarrollo más eficiente</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Pensad en sistemas que hacen muchas cosas, como Unity</p>
<p><span class="fragment" data-fragment-index="0">¿Podríais implementar Unity?</span></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Unity es un motor de juego entero</p>
<p><span class="fragment" data-fragment-index="0">(y, además, un editor)</span></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Cada parte de un motor de juego como Unity tiene que:</p>
<ul>
<li>Ser modificable</li>
<li>Ser ampliable</li>
<li>Ser independiente</li>
<li>Comunicarse con las demás</li>
<li>Hacer todo esto de forma que los <em>programadores</em> empleen el mínimo esfuerzo</li>
</ul>
</section></section>
<section style="top: 0px; display: block;" hidden="" aria-hidden="true" class="stack future">
<section id="por-qué-pensar-en-la-arquitectura" class="title-slide slide level1" style="top: 307.5px; display: block;">
<h1>Por qué pensar en la arquitectura</h1>

</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>La arquitectura software de un videojuego no es para la <em>máquina</em>, es para el <em>programador</em></p>
<p>Pensad en un juego cuyo código comunique los módulos de varias maneras distintas</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Cuando se tienen 6 subsistemas distintos, la organización del código es <em>indispensable</em></p>
<p>Además, puede tener impacto en la eficiencia</p>
</section></section>
<section style="top: 350px; display: none;" hidden="" aria-hidden="true" class="stack future">
<section id="repaso-de-programación-orientada-a-objetos" class="title-slide slide level1" style="top: 350px; display: none;">
<h1>Repaso de programación orientada a objetos</h1>

</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Un paradigma de programación muy usado para sistemas software que requieren arquitecturas complejas es la <em>programación orientada a objetos</em> basada en clases</p>
</section>
<section id="clases" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Clases</h2>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Las clases son los tipos, las estructuras de las que se crean instancias</p>
<figure>
<img data-src="umlbasico.pu.svg" alt="Ejemplo de clases"><figcaption aria-hidden="true">Ejemplo de clases</figcaption>
</figure>
</section>
<section id="instancias" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Instancias</h2>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Las instancias son cada uno de los elementos/objetos concretos que tienen las propiedades (atributos y métodos) de una clase</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Aquí, <code class="sourceCode cpp">player</code> y <code class="sourceCode cpp">enemy</code> son instancias de <code class="sourceCode cpp">Player</code> y <code class="sourceCode cpp">Enemy</code> respectivamente:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>Player player<span class="op">(</span><span class="st">"player"</span><span class="op">,</span> <span class="dv">10</span><span class="op">,</span> <span class="dv">10</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">100</span><span class="op">);</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>Enemy enemy<span class="op">(</span><span class="st">"enemy"</span><span class="op">,</span> <span class="dv">15</span><span class="op">,</span> <span class="dv">15</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="op">&amp;</span>player<span class="op">);</span></span></code></pre></div>
</section>
<section id="relaciones" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Relaciones</h2>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Las clases, como módulos, se relacionan en un sistema</p>
<p>Hay muchos tipos de relaciones y muchas maneras de usarlas, aquí sólo comentamos algunas</p>
</section>
<section id="herencia" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Herencia</h2>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Las clases pueden <em>heredarse</em>, de forma que una clase <em>hija</em> <strong>es-una</strong> (<code>is-a</code>) clase padre también</p>
<figure>
<img data-src="herencia.pu.svg" alt="Clases para estructurar un juego"><figcaption aria-hidden="true">Clases para estructurar un juego</figcaption>
</figure>
</section>
<section id="uso" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Uso</h2>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Las clases pueden <em>usarse</em> unas a otras, de forma que se <em>pasen mensajes</em></p>
<figure>
<img data-src="asociacion.pu.svg" alt="Clases que se usan"><figcaption aria-hidden="true">Clases que se usan</figcaption>
</figure>
</section>
<section id="composición" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Composición</h2>
<p>Las clases pueden <em>componerse</em>, de forma que la relación es muy fuerte. Así, si desaparece el todo, <em>desaparecen las partes también</em></p>
<figure>
<img data-src="composicion.pu.svg" alt="Composición de clases"><figcaption aria-hidden="true">Composición de clases</figcaption>
</figure>
</section></section>
<section style="top: 350px; display: none;" hidden="" aria-hidden="true" class="stack future">
<section id="arquitecturas-basadas-en-herencia" class="title-slide slide level1" style="top: 350px; display: none;">
<h1>Arquitecturas basadas en herencia</h1>

</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>La programación orientada a objetos clásica permite una manera de modular sistemas</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Entre otros, los videojuegos son razonablemente complejos y manejan dos aspectos que hay que gestionar:</p>
<ul>
<li>Modelo de datos (orco, espada, mundo…)</li>
<li>Modelo de sistemas (gráficos, sonido, entrada…)</li>
</ul>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Muchos videojuegos se han modelado con patrones de herencia</p>
<p><span class="fragment" data-fragment-index="0">¿<strong>Por qué</strong>?</span></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>¿Por qué <em>no</em> seguimos haciéndolo?</p>
<p><span class="fragment" data-fragment-index="0">(Hay mucha gente que sigue haciéndolo, y en muchos casos no es un problema)</span></p>
</section>
<section id="el-problema-de-la-herencia" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>El problema de la herencia</h2>
<p>La herencia se basa en la relación <em>es-un</em></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Muchas veces:</p>
<ul>
<li>todos los <code>Enemigos</code> son <code>Movibles</code></li>
<li>todos los <code>Jugadores</code> son <code>Personajes</code></li>
<li>todos los proyectiles son objetos <code>Físicos</code></li>
</ul>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Intentémoslo:</p>
<p><code>entidad</code> → <code>movible</code> → <code>visible</code> → <code>jugador</code></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<figure>
<img data-src="herenciacorrecta.pu.svg" alt="Herencia básica"><figcaption aria-hidden="true">Herencia básica</figcaption>
</figure>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>¿Pero qué pasa cuando queremos crear…</p>
<ul>
<li>… un personaje <em>invisible</em>?</li>
<li>… un proyectil manejado por la red?</li>
<li>… un enemigo que no se mueve?</li>
</ul>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Ahora hagamos un jugador que no se puede mover:</p>
<figure>
<img data-src="herenciaproblema.pu.svg" alt="Herencia problemática"><figcaption aria-hidden="true">Herencia problemática</figcaption>
</figure>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>A finales de los 90 esto se convirtió en un problema claro, y las arquitecturas por componentes de entidad se generalizaron</p>
<p>En general (y mucho en diseño de videojuegos) preferimos <a href="https://en.wikipedia.org/wiki/Composition_over_inheritance">composición antes que herencia</a></p>
</section></section>
<section style="top: 350px; display: none;" hidden="" aria-hidden="true" class="stack future">
<section id="sistemas-de-componentes" class="title-slide slide level1" style="top: 350px; display: none;">
<h1>Sistemas de componentes</h1>

</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Para aliviar los problemas relativos de la estructura de herencia (con <em>es-un</em>), usamos <a href="https://en.wikipedia.org/wiki/Entity_component_system"><strong>componentes</strong></a></p>
</section>
<section id="qué-es-un-componente" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Qué es un componente</h2>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Un componente es un aspecto, una propiedad o característica que tiene una <em>entidad</em></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Por ejemplo, podemos tener un componente que sirva para pintar</p>
<p>Este componente se usará <em>sólo para pintar</em>, y no sabrá nada del sonido</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>También podríamos añadir un componente para modelar un inventario</p>
<p>El componente no sabrá nada de la entidad que lo contiene. Sólo tendrá información de cómo guardar objetos</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Puede haber un componente para las entidades que son visibles, y otro
 componente para las entidades que tienen respuesta física al sistema 
(tabla &nbsp;1)</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<div id="tbl:componentes">
<table>
<caption>Tabla # 1: Entidades y sus componentes correspondientes</caption>
<thead>
<tr class="header">
<th style="text-align: center;">Entidad</th>
<th style="text-align: center;">Física</th>
<th style="text-align: center;">Visible</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">Nube</td>
<td style="text-align: center;">✗</td>
<td style="text-align: center;">✓</td>
</tr>
<tr class="even">
<td style="text-align: center;">Orco</td>
<td style="text-align: center;">✓</td>
<td style="text-align: center;">✓</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Trigger</td>
<td style="text-align: center;">✗</td>
<td style="text-align: center;">✗</td>
</tr>
<tr class="even">
<td style="text-align: center;">Espíritu</td>
<td style="text-align: center;">✓</td>
<td style="text-align: center;">✗</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="entonces-qué-es-una-entidad" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Entonces, ¿qué es una entidad?</h2>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Una <em>entidad</em> no es más que un identificador, un elemento vacío que <em>contiene componentes</em></p>
<p>La entidad no tiene información de cómo pintarse, ni de cómo moverse</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<ul>
<li>Un personaje (“player”) será una entidad</li>
<li>Un <em>trigger</em>, también</li>
<li>Un botón</li>
<li>Los enemigos</li>
</ul>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Es decir, una entidad es algo genérico que <em>sólo tiene una lista de componentes</em></p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> entidad <span class="op">=</span> {</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>   <span class="dt">id</span>          <span class="op">:</span> <span class="dv">4</span><span class="op">,</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>   <span class="dt">componentes</span> <span class="op">:</span> [</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>        drawable<span class="op">,</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>        sound<span class="op">,</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>        movable<span class="op">,</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>        physics</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>   ]</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>La entidad <strong>delega</strong> en sus componentes todo el comportamiento:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co">// en cada ciclo (tick), la entidad simplemente </span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="co">// delega en sus componentes</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>Entity<span class="op">.</span><span class="at">prototype</span><span class="op">.</span><span class="at">tick</span> <span class="op">=</span> <span class="kw">function</span>() {</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">this</span><span class="op">.</span><span class="at">components</span><span class="op">.</span><span class="fu">forEach</span>(<span class="kw">function</span>(component) {</span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>        component<span class="op">.</span><span class="fu">tick</span>()<span class="op">;</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>    })<span class="op">;</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
</section></section>
<section style="top: 350px; display: none;" hidden="" aria-hidden="true" class="stack future">
<section id="sistemas-de-entidades" class="title-slide slide level1" style="top: 350px; display: none;">
<h1>Sistemas de entidades</h1>

</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Cada componente tiene información sobre un aspecto del juego</p>
<ul>
<li>Física</li>
<li>Gráficos</li>
<li>Sonido</li>
<li>Entrada</li>
<li>Colisiones</li>
<li>Bandos</li>
<li>Inventario</li>
<li>…</li>
</ul>
</section>
<section id="sistemas" class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">
<h2>Sistemas</h2>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Tiene sentido, por lo tanto, <strong>dividir</strong> el código en partes (hacer módulos) que se encarguen de trabajar los dominios correspondientes</p>
<p>Cada uno de estos módulos suelen llamarse <em>sistemas</em> o <em>subsistemas</em></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Cada sistema suele manejar y tener acceso a los componentes correspondientes</p>
<p><small>Sí, en arquitectura no hay teorías generales. Las cosas “suelen” hacerse de una u otra manera</small></p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Por ejemplo, en la parte física no suele influir mucho el sonido:</p>
<figure>
<img data-src="sistemascomponentes.pu.svg" alt="Relación entre sistemas y componentes"><figcaption aria-hidden="true">Relación entre sistemas y componentes</figcaption>
</figure>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Así pues, <code>AudioComponent</code> sólo se relaciona con <code>AudioManager</code> (y, probablemente, con <code>Entity</code>) pero no sabe nada de <code>PhysicsManager</code></p>
</section></section>
<section style="top: 350px; display: none;" hidden="" aria-hidden="true" class="stack future">
<section id="mixins-una-aproximación-a-los-componentes" class="title-slide slide level1" style="top: 350px; display: none;">
<h1><em>Mixins</em>: una aproximación a los componentes</h1>

</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Un <em>mixin</em> es una clase pensada para contener funcionalidad, pero no ser autónoma</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Usar <em>mixins</em> no representa <em>especialización</em> (<em>es-un</em>)</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Es como una <em>interfaz</em> (generalmente una clase puede incluir varios <em>mixins</em>), pero sí que tiene código</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>En JavaScript, una funcionalidad aproximada de <em>mixin</em> se puede conseguir con <code class="sourceCode javascript"><span class="bu">Object</span><span class="op">.</span><span class="fu">assign</span>()</code>:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Sword <span class="kw">extends</span> <span class="bu">Object</span> {}</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Takeable { <span class="fu">putInInventory</span>() {<span class="co">/*...*/</span>} }</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="bu">Object</span><span class="op">.</span><span class="fu">assign</span>(Sword<span class="op">.</span><span class="at">prototype</span><span class="op">,</span> Takeable)<span class="op">;</span></span></code></pre></div>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<figure>
<img data-src="mixin.pu.svg" alt="Ejemplo en UML con un mixin"><figcaption aria-hidden="true">Ejemplo en UML con un <em>mixin</em></figcaption>
</figure>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p><code class="sourceCode javascript"><span class="bu">Object</span><span class="op">.</span><span class="fu">assign</span>()</code> sólo copia propiedades entre objetos, no hay <em>herencia</em></p>
</section></section>
<section style="top: 350px; display: none;" hidden="" aria-hidden="true" class="stack future">
<section id="hay-muchas-maneras-de-hacer-arquitecturas" class="title-slide slide level1" style="top: 350px; display: none;">
<h1>Hay muchas maneras de hacer arquitecturas</h1>

</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>En este tema hemos visto (y veremos) <em>una manera</em> de hacer arquitecturas por componentes, pero hay muchas</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<p>Paso de mensajes, entidades puras, sistemas independientes o acoplados… cada decisión de diseño depende del problema a resolver</p>
</section>
<section class="slide level2 future" aria-hidden="true" style="top: 350px; display: none;">

<blockquote>
<p>No hay una solución general para todos los problemas</p>
</blockquote>
</section></section>
    </div>
  <div class="backgrounds"><div class="slide-background present" style="display: block;" data-loaded="true"><div class="slide-background-content"></div></div><div class="slide-background stack future" style="display: block;" data-loaded="true"><div class="slide-background-content"></div><div class="slide-background title-slide slide level1 present" style="display: block;" data-loaded="true"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: block;" data-loaded="true"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div></div><div class="slide-background stack future" style="display: block;" data-loaded="true"><div class="slide-background-content"></div><div class="slide-background title-slide slide level1 present" style="display: block;" data-loaded="true"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div></div><div class="slide-background stack future" style="display: none;"><div class="slide-background-content"></div><div class="slide-background title-slide slide level1 present" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div></div><div class="slide-background stack future" style="display: none;"><div class="slide-background-content"></div><div class="slide-background title-slide slide level1 present" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div></div><div class="slide-background stack future" style="display: none;"><div class="slide-background-content"></div><div class="slide-background title-slide slide level1 present" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div></div><div class="slide-background stack future" style="display: none;"><div class="slide-background-content"></div><div class="slide-background title-slide slide level1 present" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div></div><div class="slide-background stack future" style="display: none;"><div class="slide-background-content"></div><div class="slide-background title-slide slide level1 present" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div></div><div class="slide-background stack future" style="display: none;"><div class="slide-background-content"></div><div class="slide-background title-slide slide level1 present" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background slide level2 future" style="display: none;"><div class="slide-background-content"></div></div></div></div><div class="slide-number" style="display: block;"><a href="#/title-slide">
					<span class="slide-number-a">1</span>
					</a></div><aside class="controls" style="display: block;" data-controls-layout="bottom-right" data-controls-back-arrows="faded"><button class="navigate-left" aria-label="previous slide" disabled="disabled"><div class="controls-arrow"></div></button>
			<button class="navigate-right enabled highlight" aria-label="next slide"><div class="controls-arrow"></div></button>
			<button class="navigate-up" aria-label="above slide" disabled="disabled"><div class="controls-arrow"></div></button>
			<button class="navigate-down" aria-label="below slide" disabled="disabled"><div class="controls-arrow"></div></button></aside><div class="progress" style="display: block;"><span style="transform: scaleX(0);"></span></div><div class="speaker-notes" data-prevent-swipe="" tabindex="0"></div><div class="pause-overlay"><button class="resume-button">Resume presentation</button></div><div style="position: absolute; height: 1px; width: 1px; overflow: hidden; clip: rect(1px, 1px, 1px, 1px);" class="aria-status" aria-live="polite" aria-atomic="true">Introducción a la arquitectura de videojuegos </div></div>

  <script src="Introducci%C3%B3n%20a%20la%20arquitectura%20de%20videojuegos_files/reveal.js"></script>

  <!-- reveal.js plugins -->
  <script src="Introducci%C3%B3n%20a%20la%20arquitectura%20de%20videojuegos_files/notes.js"></script>
  <script src="Introducci%C3%B3n%20a%20la%20arquitectura%20de%20videojuegos_files/search.js"></script>
  <script src="Introducci%C3%B3n%20a%20la%20arquitectura%20de%20videojuegos_files/zoom.js"></script>

  <script>

      // Full list of configuration options available at:
      // https://revealjs.com/config/
      Reveal.initialize({
        // Display controls in the bottom right corner
        controls: true,

        // Help the user learn the controls by providing hints, for example by
        // bouncing the down arrow when they first encounter a vertical slide
        controlsTutorial: true,

        // Determines where controls appear, "edges" or "bottom-right"
        controlsLayout: 'bottom-right',

        // Visibility rule for backwards navigation arrows; "faded", "hidden"
        // or "visible"
        controlsBackArrows: 'faded',

        // Display a presentation progress bar
        progress: true,

        // Display the page number of the current slide
        slideNumber: true,

        // 'all', 'print', or 'speaker'
        showSlideNumber: 'all',

        // Add the current slide number to the URL hash so that reloading the
        // page/copying the URL will return you to the same slide
        hash: false,

        // Start with 1 for the hash rather than 0
        hashOneBasedIndex: false,

        // Flags if we should monitor the hash and change slides accordingly
        respondToHashChanges: true,

        // Push each slide change to the browser history
        history: false,

        // Enable keyboard shortcuts for navigation
        keyboard: true,

        // Enable the slide overview mode
        overview: true,

        // Disables the default reveal.js slide layout (scaling and centering)
        // so that you can use custom CSS layout
        disableLayout: false,

        // Vertical centering of slides
        center: true,

        // Enables touch navigation on devices with touch input
        touch: true,

        // Loop the presentation
        loop: false,

        // Change the presentation direction to be RTL
        rtl: false,

        // see https://revealjs.com/vertical-slides/#navigation-mode
        navigationMode: 'default',

        // Randomizes the order of slides each time the presentation loads
        shuffle: false,

        // Turns fragments on and off globally
        fragments: true,

        // Flags whether to include the current fragment in the URL,
        // so that reloading brings you to the same fragment position
        fragmentInURL: true,

        // Flags if the presentation is running in an embedded mode,
        // i.e. contained within a limited portion of the screen
        embedded: false,

        // Flags if we should show a help overlay when the questionmark
        // key is pressed
        help: true,

        // Flags if it should be possible to pause the presentation (blackout)
        pause: true,

        // Flags if speaker notes should be visible to all viewers
        showNotes: false,

        // Global override for autoplaying embedded media (null/true/false)
        autoPlayMedia: null,

        // Global override for preloading lazy-loaded iframes (null/true/false)
        preloadIframes: null,

        // Number of milliseconds between automatically proceeding to the
        // next slide, disabled when set to 0, this value can be overwritten
        // by using a data-autoslide attribute on your slides
        autoSlide: 0,

        // Stop auto-sliding after user input
        autoSlideStoppable: true,

        // Use this method for navigation when auto-sliding
        autoSlideMethod: null,

        // Specify the average time in seconds that you think you will spend
        // presenting each slide. This is used to show a pacing timer in the
        // speaker view
        defaultTiming: null,

        // Enable slide navigation via mouse wheel
        mouseWheel: false,

        // The display mode that will be used to show slides
        display: 'block',

        // Hide cursor if inactive
        hideInactiveCursor: true,

        // Time before the cursor is hidden (in ms)
        hideCursorTime: 5000,

        // Opens links in an iframe preview overlay
        previewLinks: false,

        // Transition style (none/fade/slide/convex/concave/zoom)
        transition: 'slide',

        // Transition speed (default/fast/slow)
        transitionSpeed: 'default',

        // Transition style for full page slide backgrounds
        // (none/fade/slide/convex/concave/zoom)
        backgroundTransition: 'fade',

        // Number of slides away from the current that are visible
        viewDistance: 3,

        // Number of slides away from the current that are visible on mobile
        // devices. It is advisable to set this to a lower number than
        // viewDistance in order to save resources.
        mobileViewDistance: 2,

        // reveal.js plugins
        plugins: [
          RevealNotes,
          RevealSearch,
          RevealZoom
        ]
      });
    </script>
    

</body></html>